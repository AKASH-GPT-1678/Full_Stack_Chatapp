// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  email        String  @unique
  fullName     String?
  username     String
  phone        String?
  password     String
  profileImage String?
  app          Apps    @default(CHATTERBOX)

  myContacts Contacts[] @relation("UserOwnedContacts")
  inContacts Contacts[] @relation("UserSavedAsContact")
  groups     Groups[]
}

model Groups {
  id           String  @id @default(uuid())
  groupName    String
  description  String
  isPublic     Boolean
  groupProfile String
  members      User[]
}

model Contacts {
  id String @id @default(uuid())

  owner   User   @relation("UserOwnedContacts", fields: [ownerId], references: [id])
  ownerId String

  contact   User    @relation("UserSavedAsContact", fields: [contactId], references: [id])
  contactId String
  accepted  Boolean @default(false)

  createdAt DateTime @default(now())
}

enum Apps {
  CHATTERBOX
  B2BMEATWEB
  FLEETOPS
  RENOVATOR
}

enum Status {
  PENDING
  SUCCESS
}

model Message {
  id         String   @id @default(uuid())
  senderId   String
  receiverId String
  groupId    String?
  status     Status?
  content    String
  app        Apps
  createdAt  DateTime @default(now())
}
